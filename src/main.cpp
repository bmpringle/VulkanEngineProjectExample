#include "VKRenderer.h"

static std::vector<Vertex> cube = {
  {{0.0f, 0.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {1, 0, 0}}, //front
  {{1.0f, 1.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {0, 1, 0}},
  {{0.0f, 1.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {1, 1, 0}},

  {{0.0f, 0.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {1, 0, 0}},
  {{1.0f, 0.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {0, 0, 0}},
  {{1.0f, 1.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {0, 1, 0}},   

  {{0.0f, 1.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {0, 1, 0}}, //back
  {{1.0f, 1.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {1, 1, 0}},
  {{0.0f, 0.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {0, 0, 0}},

  {{1.0f, 1.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {1, 1, 0}},  
  {{1.0f, 0.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {1, 0, 0}},
  {{0.0f, 0.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {0, 0, 0}},

  {{0.0f, 0.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {0, 0, 0}}, //left
  {{0.0f, 1.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {1, 1, 0}},
  {{0.0f, 0.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {1, 0, 0}},

  {{0.0f, 0.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {0, 0, 0}},
  {{0.0f, 1.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {0, 1, 0}},
  {{0.0f, 1.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {1, 1, 0}},

  {{1.0f, 0.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {0, 0, 0}}, //right
  {{1.0f, 1.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {0, 1, 0}},
  {{1.0f, 0.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {1, 0, 0}},

  {{1.0f, 1.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {0, 1, 0}},
  {{1.0f, 1.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {1, 1, 0}},
  {{1.0f, 0.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {1, 0, 0}},
  
  {{1.0f, 1.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {0, 0, 0}}, //top
  {{1.0f, 1.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {0, 1, 0}},
  {{0.0f, 1.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {1, 0, 0}},

  {{1.0f, 1.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {0, 1, 0}},
  {{0.0f, 1.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {1, 1, 0}},
  {{0.0f, 1.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {1, 0, 0}},

  {{0.0f, 0.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {0, 0, 0}}, //bottom
  {{1.0f, 0.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {1, 1, 0}},
  {{1.0f, 0.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {1, 0, 0}},

  {{0.0f, 0.0f, 0.0f}, {1.0f, 1.0f, 1.0f}, {0, 0, 0}},
  {{0.0f, 0.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {0, 1, 0}},
  {{1.0f, 0.0f, 1.0f}, {1.0f, 1.0f, 1.0f}, {1, 1, 0}},
};

int main() {
  //init renderer
  VKRenderer renderer = VKRenderer();
  std::vector<InstanceData> data = {InstanceData({{0, 0, 3}})};
  renderer.setModel("mdl", cube);
  renderer.addInstancesToModel("mdl", "s1", data);
  renderer.loadTextureArray("1", {"assets/dirt.png"});
  renderer.setCurrentTextureArray("1");
  renderer.getCameraPosition() = glm::vec3(2, 2, 0);
  while(!renderer.getEngine()->getDisplay()->shouldWindowClose()) {
    renderer.recordCommandBuffers();
    renderer.renderFrame();
    glfwPollEvents();
  }
  return 0;
}
